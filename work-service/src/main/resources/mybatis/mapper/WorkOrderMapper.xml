<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kgc.work.workservice.mapper.WorkOrderMapper" >
  <resultMap id="BaseResultMap" type="com.kgc.work.bean.WorkOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="projectid" property="projectid" jdbcType="INTEGER" />
    <result column="executor" property="executor" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="orderlevel" property="orderlevel" jdbcType="INTEGER" />
    <result column="createdate" property="createdate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, projectid, executor, description, orderlevel, createdate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kgc.work.bean.WorkOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from workorder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from workorder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kgc.work.bean.WorkOrderExample" >
    delete from workorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kgc.work.bean.WorkOrder" >
    insert into workorder (id, projectid, executor, 
      description, orderlevel, createdate
      )
    values (#{id,jdbcType=INTEGER}, #{projectid,jdbcType=INTEGER}, #{executor,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{orderlevel,jdbcType=INTEGER}, #{createdate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kgc.work.bean.WorkOrder" >
    insert into workorder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectid != null" >
        projectid,
      </if>
      <if test="executor != null" >
        executor,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="orderlevel != null" >
        orderlevel,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="executor != null" >
        #{executor,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="orderlevel != null" >
        #{orderlevel,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kgc.work.bean.WorkOrderExample" resultType="java.lang.Integer" >
    select count(*) from workorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update workorder
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectid != null" >
        projectid = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.executor != null" >
        executor = #{record.executor,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.orderlevel != null" >
        orderlevel = #{record.orderlevel,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null" >
        createdate = #{record.createdate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update workorder
    set id = #{record.id,jdbcType=INTEGER},
      projectid = #{record.projectid,jdbcType=INTEGER},
      executor = #{record.executor,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      orderlevel = #{record.orderlevel,jdbcType=INTEGER},
      createdate = #{record.createdate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kgc.work.bean.WorkOrder" >
    update workorder
    <set >
      <if test="projectid != null" >
        projectid = #{projectid,jdbcType=INTEGER},
      </if>
      <if test="executor != null" >
        executor = #{executor,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="orderlevel != null" >
        orderlevel = #{orderlevel,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kgc.work.bean.WorkOrder" >
    update workorder
    set projectid = #{projectid,jdbcType=INTEGER},
      executor = #{executor,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      orderlevel = #{orderlevel,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>